# codemagic.yaml — iOS device build (no codesign), verbose logging
# Surfaces the first error line and saves flutter_verbose.log as artifact.

workflows:
  ios_unsigned:
    name: iOS Unsigned Build — verbose
    instance_type: mac_mini_m2
    max_build_duration: 60
    working_directory: .

    environment:
      flutter: stable
      xcode: "15.4"
      cocoapods: default
      vars:
        LC_ALL: en_US.UTF-8
        LANG: en_US.UTF-8

    scripts:
      - name: Prep (clean & pub get)
        script: |
          set -euo pipefail
          flutter clean
          flutter pub get

      - name: Build iOS (device only, no codesign, verbose)
        script: |
          set -euo pipefail

          # Show tool versions
          flutter --version
          dart --version
          xcodebuild -version
          pod --version || true

          # Doctor is informative but non-blocking
          flutter doctor -v || true

          # Clean caches that commonly cause phantom exits
          rm -rf ios/Pods ios/Podfile.lock ~/Library/Developer/Xcode/DerivedData
          cd ios && pod repo update && cd ..

          # Ultra-verbose Flutter build and capture logs
          export FLUTTER_VERBOSE=true
          export NSUnbufferedIO=YES

          # If you use flavors, append: --flavor <yourFlavor>
          flutter build ios --release --no-codesign -v \
            --build-name=$CM_BUILD_NAME --build-number=$CM_BUILD_NUMBER 2>&1 | tee flutter_verbose.log

          # If Flutter punts to xcodebuild, try to tail its last lines for context
          if grep -m1 -E "Xcode build done|Failed to build iOS app" flutter_verbose.log; then
            XCODE_LOG=$(grep -m1 -oE "/.*xcodebuild.*\.log" flutter_verbose.log || true)
            if [ -n "$XCODE_LOG" ] && [ -f "$XCODE_LOG" ]; then
              echo "=== TAILING xcodebuild log (last 400 lines) ==="
              tail -n 400 "$XCODE_LOG"
            fi
          fi

          # Highlight the first error-like line so we can fix root cause quickly
          echo "=== FIRST ERROR-LIKE LINE ==="
          grep -n -E "❌|error: |fatal error: |Undefined symbols|ld: warning|No such module|Command CompileSwift failed|Command Ld failed" flutter_verbose.log | head -n 1 || true

    artifacts:
      - build/ios/**/*.xcarchive
      - build/ios/iphoneos/*.app
      - flutter_verbose.log

    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
        - ios/Pods
        - ~/.pub-cache

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "*"
          include: true
          source: true
