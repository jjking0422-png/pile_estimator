# codemagic.yaml — iOS device build (no codesign), robust defaults, verbose logs, unsigned IPA
# - Does NOT assume CM_BUILD_NAME/CM_BUILD_NUMBER exist; derives from pubspec.yaml if missing
# - Surfaces the FIRST failing line to speed up debugging
# - Cleans Pods/DerivedData to avoid stale cache issues
# - Saves flutter_verbose.log as an artifact
# - On success, creates: .app, .xcarchive, and unsigned .ipa

workflows:
  ios_unsigned:
    name: iOS Unsigned Build — verbose
    instance_type: mac_mini_m2
    max_build_duration: 60
    working_directory: .

    environment:
      flutter: stable
      xcode: "15.4"
      cocoapods: default
      vars:
        LC_ALL: en_US.UTF-8
        LANG: en_US.UTF-8

    scripts:
      - name: Prep (clean & pub get)
        script: |
          set -euo pipefail
          flutter clean
          flutter pub get

      - name: Build iOS (device only, no codesign, verbose)
        script: |
          set -euo pipefail
          BUILD_STATUS=0

          # Show tool versions
          flutter --version
          dart --version
          xcodebuild -version
          pod --version || true

          # Doctor is informative but non-blocking
          flutter doctor -v || true

          # Resolve build name/number safely (do NOT assume Codemagic sets them)
          # Read from pubspec.yaml: version: x.y.z+build
          VERSION_LINE=$(grep -m1 '^version:' pubspec.yaml | awk '{print $2}')
          if [ -z "${VERSION_LINE:-}" ]; then
            VERSION_LINE="1.0.0+1"
          fi
          # Split into name and number
          DEFAULT_BUILD_NAME="${VERSION_LINE%%+*}"
          DEFAULT_BUILD_NUMBER="${VERSION_LINE##*+}"
          if [ "${DEFAULT_BUILD_NUMBER}" = "${VERSION_LINE}" ]; then
            DEFAULT_BUILD_NUMBER="1"
          fi
          BUILD_NAME="${CM_BUILD_NAME:-$DEFAULT_BUILD_NAME}"
          BUILD_NUMBER="${CM_BUILD_NUMBER:-$DEFAULT_BUILD_NUMBER}"
          echo "Using BUILD_NAME=${BUILD_NAME}, BUILD_NUMBER=${BUILD_NUMBER}"

          # Clean caches that commonly cause phantom exits
          rm -rf ios/Pods ios/Podfile.lock ~/Library/Developer/Xcode/DerivedData
          cd ios && pod repo update && cd ..

          # Ultra-verbose Flutter build and capture logs
          export FLUTTER_VERBOSE=true
          export NSUnbufferedIO=YES

          # If you use flavors, append: --flavor <yourFlavor>
          flutter build ios --release --no-codesign -v \
            --build-name="${BUILD_NAME}" --build-number="${BUILD_NUMBER}" 2>&1 | tee flutter_verbose.log \
            || BUILD_STATUS=$?

          # If Flutter punted to xcodebuild, try to tail its last lines for context
          if grep -m1 -E "Xcode build done|Failed to build iOS app" flutter_verbose.log; then
            XCODE_LOG=$(grep -m1 -oE "/.*xcodebuild.*\.log" flutter_verbose.log || true)
            if [ -n "$XCODE_LOG" ] && [ -f "$XCODE_LOG" ]; then
              echo "=== TAILING xcodebuild log (last 400 lines) ==="
              tail -n 400 "$XCODE_LOG"
            fi
          fi

          # Highlight the first error-like line so we can fix root cause quickly
          echo "=== FIRST ERROR-LIKE LINE ==="
          grep -n -E "❌|error: |fatal error: |Undefined symbols|ld: warning|No such module|Command CompileSwift failed|Command Ld failed" flutter_verbose.log | head -n 1 || true

          # Propagate the original build exit status (0 on success, non-zero on failure)
          exit $BUILD_STATUS

      - name: Package unsigned IPA (runs only if build succeeded)
        script: |
          set -euo pipefail
          APP_PATH=$(find build/ios/iphoneos -name "Runner.app" -type d -print -quit || true)
          if [ -z "${APP_PATH:-}" ]; then
            echo "Runner.app not found; skipping unsigned IPA packaging."
            exit 0
          fi
          echo "Found app at: $APP_PATH"
          WORKDIR=$(pwd)
          mkdir -p artifacts
          cd "$(dirname "$APP_PATH")"
          rm -rf Payload
          mkdir Payload
          cp -R "Runner.app" Payload/
          zip -r "$WORKDIR/artifacts/Runner-unsigned.ipa" Payload
          ls -l "$WORKDIR/artifacts"

    artifacts:
      - artifacts/*.ipa
      - build/ios/**/*.xcarchive
      - build/ios/iphoneos/*.app
      - flutter_verbose.log

    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
        - ios/Pods
        - ~/.pub-cache

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "*"
          include: true
          source: true
