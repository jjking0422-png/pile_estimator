workflows:
  ios_unsigned:
    name: iOS Unsigned Build
    instance_type: mac_mini_m1
    max_build_duration: 60
    working_directory: .
    environment:
      flutter: stable
      xcode: latest
    scripts:
      - name: Prep (clean & pub get)
        script: |
          set -euo pipefail
          flutter clean
          flutter pub get

      - name: Force Runner xcodeproj to iOS 13
        script: |
          set -euo pipefail
          sed -i.bak 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9]\+\(\.[0-9]\)\?;/IPHONEOS_DEPLOYMENT_TARGET = 13.0;/g' ios/Runner.xcodeproj/project.pbxproj
          rm -f ios/Runner.xcodeproj/project.pbxproj.bak
          grep -n "IPHONEOS_DEPLOYMENT_TARGET" ios/Runner.xcodeproj/project.pbxproj | head -n 10

      - name: CocoaPods repo update & install
        script: |
          set -euo pipefail
          cd ios
          rm -rf Pods Podfile.lock
          pod repo update
          pod install --verbose
          cd ..

      - name: Build iOS (device only, no codesign, verbose)
        script: |
          set -euo pipefail
          flutter --version
          xcodebuild -version
          pod --version
          rm -rf ~/Library/Developer/Xcode/DerivedData
          # Build for a real device (no codesign). ARKit is not supported on the iOS Simulator.
          flutter build ios --release --no-codesign -v

      - name: Package .app into unsigned IPA
        script: |
          set -ex
          echo "Searching for Runner.app under build/* ..."
          APP_PATH=$(find build -type d -name "Runner.app" | head -n 1 || true)
          if [ -z "$APP_PATH" ]; then
            echo "Runner.app not found. Aborting."
            find build -maxdepth 4 -type d | sed 's/^/FOUND DIR: /'
            exit 1
          fi
          echo "Found app at: $APP_PATH"
          WORKDIR=$(pwd)
          mkdir -p artifacts
          cd "$(dirname "$APP_PATH")"
          rm -rf Payload
          mkdir Payload
          cp -R "Runner.app" Payload/
          zip -r "$WORKDIR/artifacts/Runner-unsigned.ipa" Payload
          ls -l "$WORKDIR/artifacts"
    artifacts:
      - artifacts/*.ipa
